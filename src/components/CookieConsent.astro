---
import { siteConfig } from '@/data/site.config'
const gtmId = siteConfig.gtmId
---

<div
	id='cookie-banner'
	class='fadein bg-[#0a0910] bg-opacity-80 backdrop-blur-sm border-t border-t-gray-600 text-white fixed bottom-0 left-0 w-full text-white p-4 flex flex-col md:flex-row items-center justify-between gap-4 shadow-lg z-50 hidden'
	data-gtm-id={gtmId}
	transition:persist='ignore-transitions'
>
	<div class='text-sm md:text-base'>
		We use cookies to enhance your browsing experience. Read our <a
			href='/cookie-policy'
			class='underline'>Cookie Policy</a
		>.
	</div>
	<div class='flex gap-4'>
		<button
			class='bg-gray-700 hover:bg-gray-600 text-white py-2 px-4 rounded-md text-sm md:text-base'
			id='accept-only-required'
		>
			Accept Required Only
		</button>
		<button
			class='hover:bg-blue-100 bg-white text-stone-950 py-2 px-4 rounded-md text-sm md:text-base'
			id='accept-all-cookies'
		>
			Accept All Cookies
		</button>
	</div>
</div>

<script>
	///////////////////////////////////////////////////
	////////// COOKIE UTILS //////////
	const setCookie = (name: string, value: string, days: number) => {
		const expires = new Date(Date.now() + days * 24 * 60 * 60 * 1000).toUTCString()
		document.cookie = `${name}=${value}; expires=${expires}; path=/; SameSite=Lax`
	}

	function deleteAllCookies() {
		// Get all cookies for the current domain
		const cookies = document.cookie.split(';')

		// Loop through cookies and delete each one
		cookies.forEach((cookie) => {
			const eqPos = cookie.indexOf('=')
			const name = eqPos > -1 ? cookie.substring(0, eqPos) : cookie

			// Set the cookie's expiration date to the past to delete it
			document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/`

			document.cookie =
				name + '=; Path=/; Domain=.jdonado.com; Expires=Thu, 01 Jan 1970 00:00:01 GMT;'
		})
	}

	///////////////////////////////////////////////////
	////////// GTM //////////
	const gtagFun = function () {
		window.dataLayer.push(arguments)
	}

	function getConsentStatus(consentType: string) {
		// Check if the dataLayer exists
		if (!window.dataLayer || !Array.isArray(window.dataLayer)) return null

		// Loop through dataLayer entries to find consent information
		for (let i = window.dataLayer.length - 1; i >= 0; i--) {
			const event = window.dataLayer[i]
			if (event['0'] === 'consent' && !!event['2'] && event['2']['ad_storage'] === 'granted') {
				return true
			}
		}
		return false
	}

	function injectGtmScript(containerId: string) {
		if (!containerId) return

		const iframe = document.createElement('iframe')
		iframe.src = 'https://www.googletagmanager.com/ns.html?id=' + containerId
		iframe.height = '0'
		iframe.width = '0'
		iframe.style.display = 'none'
		iframe.style.visibility = 'hidden'

		// Append the iframe to the body or another appropriate location
		document.body.appendChild(iframe)

		// Inject GTM script tag
		var script = document.createElement('script')
		script.async = true
		script.src = `https://www.googletagmanager.com/gtm.js?id=${containerId}`
		document.head.appendChild(script)
	}

	function denyGtmConsents() {
		window.gtag = window.gtag || gtagFun
		window.dataLayer = window.dataLayer || []

		window.gtag('js', new Date())
		window.gtag('consent', 'default', {
			analytics_storage: 'denied',
			ad_storage: 'denied',
			functionality_storage: 'denied',
			personalization_storage: 'denied',
			security_storage: 'denied'
		})
	}

	function grantGtmConsents() {
		window.gtag = window.gtag || gtagFun
		window.dataLayer = window.dataLayer || []

		window.gtag('js', new Date())
		window.gtag('consent', 'default', {
			analytics_storage: 'granted',
			ad_storage: 'granted',
			functionality_storage: 'granted',
			personalization_storage: 'granted',
			security_storage: 'granted'
			// ad_personalization: 'granted',
			// ad_user_data: 'granted',
		})

		window.dataLayer.push({
			event: 'gtm.js',
			timestamp: new Date().getTime()
		})

		window.dataLayer.push({
			event: 'gtm.init'
		})
	}

	const setupGtm = () => {
		const cookieBanner = document.getElementById('cookie-banner')
		const gtmId = cookieBanner ? cookieBanner.dataset.gtmId : ''
		if (!gtmId) {
			return
		}
		injectGtmScript(gtmId)
	}

	function registerPageView() {
		const alreadyInitialized = getConsentStatus('analytics_storage')

		if (!alreadyInitialized) {
			grantGtmConsents()
		}

		const path = window.location.pathname
		const title = document.title

		window.gtag = window.gtag || gtagFun
		window.dataLayer = window.dataLayer || []

		window.dataLayer.push({
			event: 'page_view',
			page: {
				path,
				title
			}
		})
	}

	///////////////////////////////////////////////////
	////////// COOKIE BANNER //////////
	const hideBanner = () => {
		const cookieBanner = document.getElementById('cookie-banner')
		if (cookieBanner) {
			cookieBanner.classList.add('hidden')
		}
	}

	const showBanner = () => {
		const cookieBanner = document.getElementById('cookie-banner')
		if (cookieBanner) {
			cookieBanner.classList.remove('hidden')
		}
	}

	const clickedOnOnlyRequired = () => {
		denyGtmConsents()
		deleteAllCookies()
		setCookie('cookies_accepted', 'required', 365)
		hideBanner()
		location.reload()
	}

	const clickedOnAcceptAll = () => {
		setCookie('cookies_accepted', 'all', 365)
		setupGtm()
		hideBanner()
		location.reload()
	}

	const checkCookieConsent = () => {
		const cookiesReviewed = document.cookie.includes('cookies_accepted')

		if (!cookiesReviewed) {
			showBanner()
			return
		}

		const cookieValue = (document.cookie || '')
			.split(';')
			.find((cookie) => cookie.includes('cookies_accepted'))

		const allCookiesAccepted = (cookieValue || '').includes('all')

		if (allCookiesAccepted) {
			setupGtm()
			registerPageView()
		}

		hideBanner()
	}

	///////////////////////////////////////////////////
	////////// EVENT LISTENERS //////////
	const addEventListeners = () => {
		const acceptOnlyRequiredButton = document.getElementById('accept-only-required')
		const acceptAllCookiesButton = document.getElementById('accept-all-cookies')

		if (acceptOnlyRequiredButton && acceptAllCookiesButton) {
			acceptOnlyRequiredButton.addEventListener('click', clickedOnOnlyRequired)
			acceptAllCookiesButton.addEventListener('click', clickedOnAcceptAll)
		}
	}

	document.addEventListener('astro:page-load', () => {
		addEventListeners()
		checkCookieConsent()
	})
</script>
