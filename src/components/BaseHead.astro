---
import { siteConfig } from '@/site-config'
import '../styles/global.css'
import { ClientRouter } from 'astro:transitions'

export interface Props {
	title: string
	description?: string
	ogImage?: string | undefined
	articleDate?: string | undefined
}

const { title, description = siteConfig.description, ogImage, articleDate } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const socialImageURL = new URL(ogImage ? ogImage : '/open-graph.jpg', Astro.url).href

const titleSeparator = 'â€¢'

const siteTitle = `${title} ${titleSeparator} ${siteConfig.title}`

// Determine JSON-LD @type dynamically
let pageType = 'WebPage'
if (Astro.url.pathname === '/') {
	pageType = 'WebSite'
} else if (Astro.url.pathname.startsWith('/post/')) {
	pageType = 'BlogPosting'
} else if (Astro.url.pathname === '/pulse') {
	pageType = 'Blog'
} else if (Astro.url.pathname.startsWith('/apps/')) {
	pageType = 'SoftwareApplication'
} else if (Astro.url.pathname === '/apps') {
	pageType = 'CollectionPage'
} else if (Astro.url.pathname === '/archive') {
	pageType = 'CollectionPage'
}

interface JsonLd {
	'@context': string
	'@type': string
	name?: string
	url?: string
	headline?: string
	description?: string
	author?: { '@type': string; name: string }
	datePublished?: string
	alternateName?: string
	image?: string
	logo?: string
	mainEntityOfPage?: { '@type': string; '@id': string }
	publisher?: { '@type': string; name: string }
}

const jsonLdData: JsonLd = {
	'@context': 'https://schema.org',
	'@type': pageType,
	name: siteTitle,
	url: canonicalURL.href,
	logo: siteConfig.logo
}

const organizationJsonLd: JsonLd = {
	'@context': 'https://schema.org',
	'@type': 'Organization',
	name: siteConfig.applicationName,
	url: canonicalURL.href,
	logo: siteConfig.logo
}

// Extra fields for WebSite
if (pageType === 'WebSite') {
	jsonLdData.name = siteConfig.applicationName
	jsonLdData.alternateName = siteTitle
	delete jsonLdData.logo
}

// Extra fields for BlogPosting
if (pageType === 'BlogPosting') {
	jsonLdData.headline = title
	jsonLdData.description = description
	jsonLdData.author = { '@type': 'Person', name: siteConfig.author }
	jsonLdData.datePublished = articleDate || ''
	jsonLdData.image = socialImageURL
	jsonLdData.mainEntityOfPage = {
		'@type': 'WebPage',
		'@id': canonicalURL.href
	}
	jsonLdData.publisher = {
		'@type': 'Person',
		name: siteConfig.author
	}
}

import { join } from 'path'
import { AstroFont } from 'astro-font'
---

<!-- Global Metadata -->
<meta charset='utf-8' />
<meta name='viewport' content='width=device-width,initial-scale=1' />
<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
<meta name='generator' content={Astro.generator} />

<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>

<!-- JSON-LD Structured Data: Organization (static on all pages) -->
<script type='application/ld+json' set:html={JSON.stringify(organizationJsonLd)} />

<!-- JSON-LD Structured Data -->
<script type='application/ld+json' set:html={JSON.stringify(jsonLdData)} />

<!-- ClientRouter (formerly ViewTransitions) -->
<ClientRouter />

<!-- SEO -->
<meta name='title' content={siteTitle} />
<meta name='description' content={description} />
<meta name='author' content={siteConfig.author} />
<meta name='application-name' content={siteConfig.applicationName} />
{
	title === '404 - Page Not Found' ? (
		<meta name='robots' content='noindex' />
	) : (
		<meta name='robots' content='index, follow' />
	)
}

<!-- Open Graph / Facebook -->
<meta property='og:type' content={articleDate ? 'article' : 'website'} />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={siteTitle} />
<meta property='og:description' content={description} />
<meta property='og:site_name' content={siteConfig.applicationName} />
<meta property='og:image' content={socialImageURL} />
{
	articleDate && (
		<>
			<meta property='article:author' content={siteConfig.author} />
			<meta property='article:published_time' content={articleDate} />
		</>
	)
}

<!-- Twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={socialImageURL} />
<meta name='twitter:site' content='@jdonado' />

<!-- RSS auto-discovery -->
<link rel='alternate' type='application/rss+xml' title={siteConfig.title} href='/rss.xml' />

<AstroFont
	config={[
		{
			preload: false,
			display: 'swap',
			name: 'Raleway',
			fallback: 'sans-serif',
			src: [
				{
					weight: '100',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Thin.ttf')
				},
				{
					weight: '100',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-ThinItalic.ttf')
				},

				{
					weight: '200',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-ExtraLight.ttf')
				},
				{
					weight: '200',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-ExtraLightItalic.ttf')
				},

				{
					weight: '300',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Light.ttf')
				},
				{
					weight: '300',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-LightItalic.ttf')
				},

				{
					weight: '400',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Regular.ttf')
				},
				{
					weight: '400',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Italic.ttf')
				},

				{
					weight: '500',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Medium.ttf')
				},
				{
					weight: '500',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-MediumItalic.ttf')
				},

				{
					weight: '600',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-SemiBold.ttf')
				},
				{
					weight: '600',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-SemiBoldItalic.ttf')
				},

				{
					weight: '700',
					preload: true,
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Bold.ttf')
				},
				{
					weight: '700',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-BoldItalic.ttf')
				},

				{
					weight: '800',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-ExtraBold.ttf')
				},
				{
					weight: '800',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-ExtraBoldItalic.ttf')
				},

				{
					weight: '900',
					style: 'normal',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-Black.ttf')
				},
				{
					weight: '900',
					style: 'italic',
					path: join(process.cwd(), 'public', 'fonts', 'Raleway-BlackItalic.ttf')
				}
			]
		}
	]}
/>
