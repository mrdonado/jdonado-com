---
import { type CollectionEntry, getCollection } from 'astro:content'
import BlogPost from '@/layouts/BlogPost'
import Code from '@/components/mdx/Code'
import ListRelatedPosts from '@/components/ListRelatedPosts'
import Share from '@/components/Share'
import TableOfContents from '@/components/TableOfContents'
import { getApps } from '@/utils'
import SButton from '@/components/mdx/SButton'
import Disqus from '@/components/Disqus'
import { disqusConfig } from '@/data/disqus.config'

const apps = await getCollection('app')
export async function getStaticPaths() {
	const apps = await getApps()

	return apps.map((app) => ({
		params: { slug: app.slug },
		props: app
	}))
}
type Props = CollectionEntry<'app'>

const app = Astro.props

const { Content, headings, remarkPluginFrontmatter } = await app.render()

const disqusEnabled = disqusConfig.enabled
---

<BlogPost
	id={app.id}
	data={app.data}
	headings={headings}
	readTime={remarkPluginFrontmatter.minutesRead}
>
	<div class='grid grid-cols-1 md:grid-cols-[20%_auto] gap-10 mt-8'>
		<!-- aside  -->
		<aside class='md:flex flex-col gap-8 hidden'>
			<Share />
			<div class='sticky top-24 self-start hidden md:block transition-all duration-200'>
				{headings && headings.length > 0 && <TableOfContents {headings} />}
			</div>
		</aside>

		<!-- post -->
		<article class='max-w-full w-full'>
			<div class='prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full'>
				<Content components={{ pre: Code, SButton }} />
			</div>
		</article>
	</div>

	{disqusEnabled && <Disqus />}
</BlogPost>
