---
import BaseLayout from '@/layouts/BaseLayout'
import ListItems from '@/components/ListItems'
import ListCategories from '@/components/ListCategories'
import TitlePage from '@/components/TitlePage'
import { sluglify, unsluglify, getCategories, getPosts } from '@/utils'
import { siteConfig } from '@/data/site.config'
import Pagination from '@/components/Pagination'

const originalCategories = await getCategories()

export async function getStaticPaths({ paginate }: any) {
	const categories = await getCategories()
	const allPosts = await getPosts()

	return categories.flatMap((category: string) => {
		const unsluglifyNameCategory = unsluglify(category!.toLowerCase())
		const filteredPosts = allPosts.filter(
			(post) => post.data.category.toLowerCase() === unsluglifyNameCategory
		)

		return paginate(filteredPosts, {
			params: {
				category: sluglify(category.toLowerCase())
			},
			pageSize: siteConfig.paginationSize
		})
	})
}
const params = Astro.params
const { page } = Astro.props

// The original category name is the one that matches the case
const categoryIndex = originalCategories.findIndex(
	(c) => sluglify(c).toLowerCase() === params.category
)
const originalCategory = originalCategories[categoryIndex]

const posts = page.data
---

<BaseLayout title={params.category}>
	<TitlePage title={originalCategory} />
	<ListCategories activeCategory={params.category} />
	<ListItems items={posts} />
	<Pagination page={page} />
</BaseLayout>
