---
import type { CollectionEntry } from 'astro:content'
import FormattedDate from '@/components/FormattedDate'
import BaseLayout from '@/layouts/BaseLayout'
import Tag from '@/components/Tag'
import type { MarkdownHeading } from 'astro'
import { Image } from 'astro:assets'
import { getApps } from '@/utils'

const lastApp = (await getApps(1))[0]

type Props = {
	id: CollectionEntry<'blog'>['id']
	data: CollectionEntry<'blog'>['data']
	headings: MarkdownHeading[]
	readTime: string
}

const { data, readTime, headings, id } = Astro.props
const { title, description, pubDate, heroImage, tags = [] } = data

const articleDate = pubDate.toISOString()
---

<BaseLayout
	title={title}
	description={description}
	image={heroImage?.src}
	articleDate={articleDate}
>
	<article class='min-w-full md:py-4 sm:max-w-none md:max-w-none'>
		<header class='mb-3 flex flex-col justify-center items-center gap-6'>
			<div class='flex flex-col gap-2'>
				<div class='flex items-center justify-center gap-x-1'>
					<p class='text-center text-sm text-opacity-50'>
						Published <FormattedDate date={pubDate} />
					</p>
					<p class='text-center text-sm text-opacity-50 font-bold'>
						- {readTime}
					</p>
				</div>
				<h1 class='text-center text-4xl md:text-6xl md:pb-2.5 font-semibold'>
					{title}
				</h1>
			</div>

			<div class='flex flex-wrap justify-center items-center gap-2 gap-y-4 md:gap-5'>
				{tags.map((tag) => <Tag tag={tag} />)}

				<a
					href={`/apps/${lastApp.slug}`}
					class='block dark:border-gray-600 rounded-lg text-gray-500 dark:text-gray-400 text-base md:text-lg mx-auto px-3 py-2 hover:border-gray-400 hover:dark:border-gray-500 hover:shadow transition-all'
				>
					<div class='flex items-center justify-center gap-4'>
						<Image
							src={lastApp.data.icon}
							alt={lastApp.data.name}
							class='rounded-lg w-15 h-15'
							width='60'
							height='60'
						/>

						<div>
							<p class='font-semibold text-gray-900 dark:text-gray-100'>
								{lastApp.data.name}
							</p>
							<p class='text-sm md:text-base'>Free download available now!</p>
						</div>
					</div>
				</a>
			</div>
		</header>

		<>
			{
				heroImage && (
					<Image
						src={heroImage}
						width={1000}
						height={500}
						quality={100}
						format='jpg'
						loading='eager'
						class='fadein rounded-md w-full max-h-[300px]  md:max-h-[500px] my-8 object-cover'
						alt={`img of ${title}`}
					/>
				)
			}
		</>

		<hr />

		<div>
			<slot />
		</div>
	</article>
</BaseLayout>
