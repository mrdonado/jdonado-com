---
import type { CollectionEntry } from 'astro:content'
import FormattedDate from '@/components/FormattedDate'
import BaseLayout from '@/layouts/BaseLayout'
import Tag from '@/components/Tag'
import type { MarkdownHeading } from 'astro'
import { Picture } from 'astro-imagetools/components'
import { getApps } from '@/utils'
import YouTubeIcon from '@/components/icons/YouTubeIcon'

const lastApp = (await getApps(1))[0]

type Props = {
	id: CollectionEntry<'blog'>['id']
	data: CollectionEntry<'blog'>['data']
	headings: MarkdownHeading[]
	readTime: string
}

const { data, readTime, headings, id } = Astro.props
const { title, description, pubDate, heroImage, tags = [] } = data

const articleDate = pubDate.toISOString()
---

<BaseLayout
	title={title}
	description={description}
	image={heroImage?.src}
	articleDate={articleDate}
>
	<article class='min-w-full md:py-4 sm:max-w-none md:max-w-none'>
		<header class='mb-3 flex flex-col justify-center items-center gap-6'>
			<div class='flex flex-col gap-2'>
				<h1 class='text-center text-4xl md:text-6xl md:pb-2.5 font-semibold'>
					{title}
				</h1>
				<p
					class='text-center text-gray-600 dark:text-gray-300 md:text-xl italic max-w-[80%] mx-auto'
				>
					{description}
				</p>
			</div>

			<div class='flex flex-wrap justify-center items-center gap-2 gap-y-4 md:gap-5'>
				{tags.map((tag) => <Tag tag={tag} />)}

				<a
					href={`/apps/${lastApp.slug}`}
					class='block dark:border-gray-600 rounded-lg text-gray-500 dark:text-gray-400 text-base md:text-lg mx-auto px-3 py-2 hover:border-gray-400 hover:dark:border-gray-500 hover:shadow transition-all'
				>
					<div class='flex items-center justify-center gap-4'>
						<div class='relative w-[60px] h-[60px] overflow-hidden rounded-[5px]'>
							<Picture
								src={lastApp.data.icon}
								alt={lastApp.data.name}
								width={60}
								quality={80}
								placeholder='blurred'
								layout='fill'
								loading='lazy'
							/>
						</div>

						<div>
							<p class='font-semibold text-gray-900 dark:text-gray-100'>
								{lastApp.data.name}
							</p>
							<p class='text-sm md:text-base'>Free download available now!</p>
						</div>
					</div>
				</a>
			</div>
		</header>

		{
			heroImage && (
				<div class='relative w-full h-[300px] md:h-[500px] my-4 fadein rounded-md overflow-hidden'>
					<Picture
						src={heroImage}
						alt={`img of ${title}`}
						width={800}
						sizes='(max-width: 768px) 100vw, 768px'
						quality={80}
						loading='eager'
						placeholder='blurred'
						layout='fill'
					/>
				</div>
			)
		}

		<div class='flex items-center justify-center gap-x-1 my-4 flex-wrap'>
			<div class='flex items-center justify-center w-full sm:w-auto gap-x-1'>
				<p class='text-center text-sm text-opacity-50'>
					Published <FormattedDate date={pubDate} />
				</p>
				<p class='text-center text-sm text-opacity-50 font-bold'>
					- {readTime}
				</p>
			</div>

			{
				data.youTubeThread && (
					<>
						{/* Inline for larger screens */}
						<p class='hidden sm:block text-center text-sm text-opacity-50 font-bold'>
							<a
								href={data.youTubeThread}
								target='_blank'
								rel='noopener noreferrer'
								aria-label='Available as a podcast on YouTube'
								class='inline-flex items-center gap-x-1'
							>
								- <YouTubeIcon /> Listen to this story
							</a>
						</p>

						{/* New line for smaller screens */}
						<p class='block sm:hidden text-center text-sm text-opacity-50 font-bold w-full'>
							<a
								href={data.youTubeThread}
								target='_blank'
								rel='noopener noreferrer'
								aria-label='Available as a podcast on YouTube'
								class='inline-flex items-center gap-x-1 justify-center'
							>
								<YouTubeIcon /> Listen to this story
							</a>
						</p>
					</>
				)
			}
		</div>

		<hr />

		<div>
			<slot />
		</div>
	</article>
</BaseLayout>
